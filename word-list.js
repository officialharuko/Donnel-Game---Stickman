const wordList = [
    { word: "algorithm", hint: "A step-by-step procedure for solving a problem." },
    { word: "array", hint: "A data structure that stores a collection of elements." },
    { word: "boolean", hint: "A data type that represents true or false values." },
    { word: "bug", hint: "An error in a program that causes incorrect or unexpected results." },
    { word: "compiler", hint: "A program that translates source code into machine code." },
    { word: "database", hint: "A structured collection of data that can be accessed and managed." },
    { word: "debugging", hint: "The process of finding and fixing errors in a program." },
    { word: "encapsulation", hint: "A principle in object-oriented programming that restricts access to data." },
    { word: "framework", hint: "A collection of prewritten code that provides a foundation for development." },
    { word: "function", hint: "A block of reusable code that performs a specific task." },
    { word: "inheritance", hint: "An object-oriented principle where a class derives properties from another class." },
    { word: "iteration", hint: "The process of repeating a set of instructions until a condition is met." },
    { word: "library", hint: "A collection of reusable code that provides functionality for a program." },
    { word: "loop", hint: "A programming construct that executes code repeatedly." },
    { word: "object", hint: "An instance of a class in object-oriented programming." },
    { word: "polymorphism", hint: "An object-oriented principle where objects can take multiple forms." },
    { word: "recursion", hint: "A programming technique where a function calls itself to solve a problem." },
    { word: "syntax", hint: "The rules that define the structure of a programming language." },
    { word: "variable", hint: "A storage location in a program that holds a value." },
    { word: "versioncontrol", hint: "A system that manages changes to source code over time." },
    { word: "abstraction", hint: "The process of hiding unnecessary details to focus on essential aspects." },
    { word: "api", hint: "A set of functions that allow programs to interact with external services." },
    { word: "bytecode", hint: "A low-level representation of a program that can be executed by a virtual machine." },
    { word: "closure", hint: "A function that retains access to its outer scope even when executed outside of it." },
    { word: "constructor", hint: "A special function used to initialize an object in a class." },
    { word: "dependency", hint: "A module or library that a program relies on to function." },
    { word: "dom", hint: "A programming interface for HTML and XML documents." },
    { word: "eventlistener", hint: "A function that waits for and responds to user interactions in a program." },
    { word: "exceptionhandling", hint: "The process of catching and managing errors in a program." },
    { word: "garbagecollection", hint: "The automatic management of memory in programming languages." },
    { word: "hashing", hint: "A technique to convert data into a fixed-size value or key." },
    { word: "interface", hint: "A contract in programming that defines methods without implementing them." },
    { word: "json", hint: "A lightweight data-interchange format commonly used in web applications." },
    { word: "lambdafunction", hint: "An anonymous function used for short, concise operations." },
    { word: "metadata", hint: "Data that describes other data." },
    { word: "middleware", hint: "Software that facilitates communication between applications." },
    { word: "namespace", hint: "A container that holds identifiers to avoid naming conflicts." },
    { word: "node", hint: "A fundamental part of a data structure, such as a linked list or tree." },
    { word: "orm", hint: "A technique for converting data between incompatible systems using objects." },
    { word: "prototype", hint: "An object from which other objects inherit properties." },
    { word: "parsing", hint: "The process of analyzing and breaking down code or data for interpretation." },
    { word: "pipeline", hint: "A series of data-processing steps where output from one step becomes input for another." },
    { word: "protocol", hint: "A set of rules defining how data is transmitted between systems." },
    { word: "query", hint: "A request for information from a database." },
    { word: "refactoring", hint: "The process of improving code structure without altering functionality." },
    { word: "repository", hint: "A storage location for code, often used in version control systems." },
    { word: "runtime", hint: "The period during which a program is executing." },
    { word: "sdk", hint: "A collection of tools and libraries for building applications." },
    { word: "serialization", hint: "The process of converting an object into a format suitable for storage or transmission." },
    { word: "stack", hint: "A data structure following the Last-In-First-Out (LIFO) principle." },
    { word: "state", hint: "A representation of the current condition or data in a program." },
    { word: "string", hint: "A sequence of characters treated as a single unit in programming." },
    { word: "thread", hint: "A unit of execution within a program that runs independently." },
    { word: "token", hint: "A representation used for authentication or parsing." },
    { word: "tuple", hint: "An ordered collection of elements that is typically immutable." },
    { word: "ui", hint: "The graphical interface through which users interact with a program." },
    { word: "unittest", hint: "A test that verifies the correctness of individual components in a program." },
    { word: "virtualmachine", hint: "A software-based emulation of a physical computer system." },
    { word: "webhook", hint: "A mechanism that allows real-time communication between applications." },
    { word: "xml", hint: "A markup language used to store and transport data in a structured format." },
    { word: "abstractclass", hint: "A class that cannot be instantiated and is meant to be extended." },
    { word: "asynchronous", hint: "A type of programming where operations do not block execution." },
    { word: "binary", hint: "A system of numerical notation that uses only 0 and 1." },
    { word: "buffer", hint: "A temporary storage area for data being transferred." },
    { word: "callback", hint: "A function passed as an argument to another function for later execution." },
    { word: "clientserver", hint: "A model where clients request services from a server." },
    { word: "commandline", hint: "A text-based interface for interacting with a computer program." },
    { word: "crud", hint: "An acronym for Create, Read, Update, and Delete operations." },
    { word: "datastructure", hint: "A way to store and organize data efficiently." },
    { word: "deadlock", hint: "A situation where multiple processes are waiting for each other to finish, causing a standstill." },
    { word: "dependencyinjection", hint: "A design pattern used to manage dependencies in a program." },
    { word: "eventdriven", hint: "A programming paradigm where the flow of execution is determined by events." },
    { word: "foreignkey", hint: "A database field that establishes a relationship between two tables." },
    { word: "hashtable", hint: "A data structure that associates keys with values using a hash function." },
    { word: "immutable", hint: "An object whose state cannot be modified after creation." },
    { word: "index", hint: "A database feature that speeds up search queries." },
    { word: "lambdaexpression", hint: "A concise way to represent an anonymous function in programming." },
    { word: "linkedlist", hint: "A linear data structure where each element is connected to the next via a pointer." },
    { word: "memoryleak", hint: "An issue where a program fails to release unused memory, leading to inefficiency." },
    { word: "microservices", hint: "A software architecture style where applications are composed of small, independent services." },
    { word: "mutex", hint: "A synchronization mechanism that prevents concurrent access to shared resources." },
    { word: "namespace", hint: "A container for identifiers to prevent naming conflicts in a program." },
    { word: "observerpattern", hint: "A design pattern where objects notify observers of state changes." },
    { word: "operatingsystem", hint: "Software that manages hardware and software resources on a computer." },
    { word: "overloading", hint: "A feature in programming that allows multiple methods with the same name but different parameters." },
    { word: "promise", hint: "An object representing the eventual completion or failure of an asynchronous operation." },
    { word: "proxy", hint: "An intermediary that controls access to another object or resource." },
    { word: "queue", hint: "A data structure following the First-In-First-Out (FIFO) principle." },
    { word: "racecondition", hint: "A situation where multiple threads access shared resources unpredictably." },
    { word: "reflection", hint: "A technique that allows inspection and modification of an object's structure at runtime." },
    { word: "scope", hint: "The area in a program where a variable is accessible." },
    { word: "singleton", hint: "A design pattern ensuring only one instance of a class exists." },
    { word: "stackoverflow", hint: "An error caused by excessive recursive function calls consuming memory." },
    { word: "stream", hint: "A sequence of data elements that can be processed incrementally." },
    { word: "strongtyping", hint: "A property of programming languages that strictly enforces type rules." },
    { word: "synchronous", hint: "A type of programming where operations are executed sequentially, blocking execution." },
    { word: "template", hint: "A blueprint for creating generic functions or classes in programming." },
    { word: "timeout", hint: "A predefined duration after which an operation is automatically canceled." },
    { word: "transaction", hint: "A sequence of operations performed as a single unit to maintain data integrity." },
    { word: "tree", hint: "A hierarchical data structure consisting of nodes connected by edges." },

];
